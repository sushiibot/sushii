version: "3.8"
services:
    sushii_interactions:
        build:
            dockerfile: ./dockerfiles/sushii-worker/Dockerfile
            context: .
        logging:
            options:
                max-size: "10m"
                max-file: "3"
        depends_on:
            - sushii_data
        restart: unless-stopped
        environment:
            - NODE_ENV=production
            - SUSHII_GRAPHQL_TOKEN=$SUSHII_GRAPHQL_TOKEN
            - DISCORD_TOKEN=$DISCORD_TOKEN
            # sushiiDev application ID, different from bot user id
            - APPLICATION_ID=193163942502072320
            # No per guild commands
            # - GUILD_ID=167058919611564043,418504865543749642
            - SUSHII_GRAPHQL_URL=http://sushii_data:8080/graphql
            - SUSHII_GRAPHQL_WS_URL=ws://sushii_data:8080/graphql
            - AMQP_URL=amqp://rabbitmq:5672
            - AMQP_QUEUE_NAME=gateway.recv
            - TWILIGHT_PROXY_URL=http://twilight-http-proxy:80/api
            - SUSHII_IMAGE_SERVER_URL=http://sushii-image-server:3000
        networks:
            - sushii_net
        labels:
            - "traefik.enable=false"
    sushii_data:
        build:
            dockerfile: ./dockerfiles/sushii-data/Dockerfile
            context: .
        logging:
            options:
                max-size: "10m"
                max-file: "3"
        restart: unless-stopped
        env_file:
            - .sushii_data.env
        networks:
            - sushii_net
        labels:
            - "traefik.enable=false"
    oathkeeper:
        image: oryd/oathkeeper:v0.38
        restart: unless-stopped
        command: serve --config=/etc/config/oathkeeper/config.yaml
        ports:
            - "4455:4455"
            - "4456:4456"
        environment:
            - TRACING_PROVIDER=jaeger
            - TRACING_PROVIDER_JAEGER_SAMPLING_SERVER_URL=http://jaeger:5778/sampling
            - TRACING_PROVIDER_JAEGER_LOCAL_AGENT_ADDRESS=jaeger:6831
            - TRACING_PROVIDER_JAEGER_SAMPLING_TYPE=const
            - TRACING_PROVIDER_JAEGER_SAMPLING_VALUE=1
        volumes:
            - ./ory/oathkeeper:/etc/config/oathkeeper
        networks:
            - sushii_net
    jaeger:
        image: jaegertracing/all-in-one
        restart: unless-stopped
        ports:
            - "16686:16686" # The UI port
        expose:
            - "16686"
            - "5778"
        networks:
            - sushii_net
    twilight-http-proxy:
        image: ghcr.io/twilight-rs/http-proxy:metrics
        container_name: twilight-http-proxy
        restart: unless-stopped
        logging:
            options:
                max-size: "10m"
                max-file: "3"
        expose:
            - "80"
        environment:
            - DISCORD_TOKEN=$DISCORD_TOKEN
            - RUST_LOG=trace
        networks:
            - sushii_net
        labels:
            - "traefik.enable=false"
    twilight-dispatch:
        image: chamburr/twilight-dispatch:0.4.3
        restart: unless-stopped
        expose:
            - "8005" # prometheus
        environment:
            - RUST_LOG=info
            - BOT_TOKEN=$DISCORD_TOKEN
            - SHARDS_START=0
            - SHARDS_END=2
            - SHARDS_TOTAL=3
            - SHARDS_CONCURRENCY=1
            - SHARDS_WAIT=6
            - CLUSTERS=1
            - DEFAULT_QUEUE=true
            - RESUME=true
            - INTENTS=37391
            - LARGE_THRESHOLD=250
            - STATUS=online
            - ACTIVITY_TYPE=0
            - ACTIVITY_NAME=sushii.xyz
            # Discord channel logs
            - LOG_CHANNEL=749822555019280434
            - LOG_GUILD_CHANNEL=749822555019280434
            - STATE_ENABLED=true
            - STATE_MEMBER=true
            - STATE_MEMBER_TTL=60000
            - STATE_MESSAGE=true
            - STATE_MESSAGE_TTL=60000
            - STATE_PRESENCE=false
            - STATE_EMOJI=true
            - STATE_VOICE=false
            - STATE_OLD=false
            - RABBIT_HOST=rabbitmq
            - RABBIT_PORT=5672
            - RABBIT_USERNAME=guest
            - RABBIT_PASSWORD=guest
            - REDIS_HOST=keydb
            - REDIS_PORT=6379
            - PROMETHEUS_HOST=127.0.0.1
            - PROMETHEUS_PORT=8005
        networks:
            - sushii_net
        labels:
            - "traefik.enable=false"
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        restart: unless-stopped
        logging:
            options:
                max-size: "10m"
                max-file: "3"
        expose:
            - "5672"
            - "15672"
        env_file:
            # user/pass
            - .rabbitmq.env
        networks:
            - sushii_net
        labels:
            - "traefik.docker.network=sushii-2_web"
            - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
            - "traefik.http.routers.rabbitmq.rule=Host(`rabbit.sushii.xyz`)"
            - "traefik.http.routers.rabbitmq.entrypoints=secure"
            - "traefik.http.routers.rabbitmq.tls.certresolver=acme"
            - "traefik.http.routers.rabbitmq.middlewares=auth@file"
    keydb:
        image: eqalpha/keydb:x86_64_v6.3.1
        container_name: sushii-keydb
        restart: unless-stopped
        expose:
            - "6379"
        networks:
            - sushii_net
        labels:
            - "traefik.enable=false"
    shlink:
        image: shlinkio/shlink:stable
        container_name: shlink
        restart: unless-stopped
        depends_on:
            shlink_db:
                condition: service_healthy
        expose:
            - "8080"
        networks:
            - sushii_net
            - web
        environment:
            - DEFAULT_DOMAIN=a.sushii.xyz
            - IS_HTTPS_ENABLED=true
            - DB_DRIVER=postgres
            - DB_HOST=shlink_db
            - DB_PORT=5432
            - DB_NAME=shlink
            - DB_USER=shlink
            - DB_PASSWORD=$SHLINK_DB_PASSWORD
        labels:
            - "traefik.docker.network=sushii-2_web"
            - "traefik.http.services.shlink.loadbalancer.server.port=8080"
            - "traefik.http.routers.shlink.rule=Host(`a.sushii.xyz`)"
            - "traefik.http.routers.shlink.entrypoints=secure"
            - "traefik.http.routers.shlink.tls.certresolver=acme"
    shlink_db:
        image: postgres:15.1-bullseye
        container_name: shlink_db
        restart: unless-stopped
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -d shlink -U shlink" ]
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - ~/docker/shlink_postgres/15:/var/lib/postgresql/data
        expose:
            - "5432"
        networks:
            - sushii_net
        environment:
            - POSTGRES_USER=shlink
            - POSTGRES_DB=shlink
            - POSTGRES_PASSWORD=$SHLINK_DB_PASSWORD
networks:
    web:
        external: true
        name: sushii-2_web
    sushii_net:
        external: true
        name: sushii-2_sushii_net
